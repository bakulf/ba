<BA>
  <audio>
    <buffers>4</buffers>
  </audio>

  <terminal>
   <escapeSequence>false</escapeSequence>
  </terminal>

  <code>
    <key char="t"><![CDATA[
      var rect = Rect(600);
      BA_UT_ok(rect, "Rect() generator exists.");
      BA_UT_is(rect.name, "rect", "Rect().name generator exists.");
      BA_UT_is(rect.frequency, 600, "Rect().frequency == 600");
      BA_UT_is(rect.duty, 0.5, "Rect().duty == 0.5");
      BA_UT_ok('get' in rect, "Rect().get exists");

      rect = Rect(600, 1);
      BA_UT_ok(rect, "Rect() generator exists.");
      BA_UT_is(rect.name, "rect", "Rect().name generator exists.");
      BA_UT_is(rect.frequency, 600, "Rect().frequency == 600");
      BA_UT_is(rect.duty, 1, "Rect().duty == 1");
      BA_UT_ok('get' in rect, "Rect().get exists");

      function testAttr(obj, name) {
        var value = Math.random();
        obj[name] = value;
        BA_UT_is(obj[name], value, obj.name + "." + name + " == " + value);

        try {
          obj[name] = "foobar";
          BA_UT_ok(false, obj.name + "." + name + " = foo should throw");
        } catch(e) {
          BA_UT_ok(true, obj.name + "." + name + " = foo should throw");
        }
      }

      testAttr(rect, 'frequency');
      testAttr(rect, 'duty');

      var rect2 = Rect(Rect(Noise()));
      BA_UT_ok(rect2, "Rect() generator exists.");

      currentBuffer.play(rect);

      var intervals = 4;
      var iId = setInterval(function() {
        BA_UT_is(currentBuffer.dataType, rect, "We are playing rect - " + intervals);
        if (!--intervals) {
          clearInterval(iId);
          quit();
          next();
        }
      }, 200);
    ]]>
    </key>
  </code>
</BA>


