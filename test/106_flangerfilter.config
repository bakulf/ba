<BA>
  <audio>
    <buffers>4</buffers>
  </audio>

  <terminal>
   <escapeSequence>false</escapeSequence>
  </terminal>

  <code>
    <key char="t"><![CDATA[
      var filter = Flanger(1, 2, 3, 4);
      BA_UT_ok(filter, "Flanger() exists.");
      BA_UT_is(filter.name, "flanger", "Flanger().name == 'flanger'");
      BA_UT_is(filter.delay, 1, "Flanger().delay == 1");
      BA_UT_is(filter.feedback, 2, "Flanger().feedback == 2");
      BA_UT_is(filter.speed, 3, "Flanger().speed == 2");
      BA_UT_is(filter.depth, 4, "Flanger().depth == 4");

      function testAttr(obj, name) {
        var value = Math.random();
        obj[name] = value;
        BA_UT_is(obj[name], value, obj.name + "." + name + " == " + value);

        try {
          obj[name] = "foobar";
          BA_UT_ok(false, obj.name + "." + name + " = foo should throw");
        } catch(e) {
          BA_UT_ok(true, obj.name + "." + name + " = foo should throw");
        }
      }

      testAttr(filter, 'delay');
      testAttr(filter, 'feedback');
      testAttr(filter, 'speed');
      testAttr(filter, 'depth');

      try {
        filter.update();
        BA_UT_ok(false, "Flanger.update() with no arguments should throw");
      } catch(e) {
        BA_UT_ok(true, "Flanger.update() with no arguments should throw");
      }

      try {
        filter.update("foo", "bar", "foo", "bar");
        BA_UT_ok(false, "Flanger.update() with wrong arguments should throw");
      } catch(e) {
        BA_UT_ok(true, "Flanger.update() with wrgon arguments should throw");
      }

      filter.update(11, 22, 33, 44);
      BA_UT_is(filter.delay, 11, "Flanger().delay == 11");
      BA_UT_is(filter.feedback, 22, "Flanger().feedback == 22");
      BA_UT_is(filter.speed, 33, "Flanger().speed == 33");
      BA_UT_is(filter.depth, 44, "Flanger().depth == 44");

      quit();
    ]]>
    </key>
  </code>
</BA>
