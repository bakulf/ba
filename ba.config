<BA>
  <!-- Default Audio Settings: -->
  <audio>
    <!-- channels>2</channels -->
    <!-- sampleRate>2</sampleRate -->
    <!-- bufferSize>2</bufferSize -->

    <buffers>4</buffers>
  </audio>

  <terminal>
   <escapeSequence>true</escapeSequence>
  </terminal>

  <code>
    <!-- comment this if you don't want to quit :) -->
    <key char="q">quit()</key>

    <key char="w">
      var sine = Phasor(600);
      currentBuffer.play(sine);
    </key>

    <key char="p">currentBuffer.playing ? currentBuffer.stop() : currentBuffer.play()</key>

    <key char="l">currentBuffer.loop = !currentBuffer.loop</key>
    <key char="v">currentBuffer.speed -= 0.1</key>
    <key char="b">currentBuffer.speed += 0.1</key>

    <key char="1">buffers[0].select()</key>
    <key char="2">buffers[1].select()</key>
    <key char="3">buffers[2].select()</key>
    <key char="4">buffers[3].select()</key>

    <key char="r">!recording ? recStart() : recStop(currentBuffer)</key>

    <key char="m">volume += 0.1</key>
    <key char="n">volume -= 0.1</key>
    <key char="x">currentBuffer.volume += 0.1</key>
    <key char="z">currentBuffer.volume -= 0.1</key>

    <key char="k">volumes[0] += 0.1</key>
    <key char="j">volumes[0] -= 0.1</key>
    <key char="h">currentBuffer.volumes[0] += 0.1</key>
    <key char="g">currentBuffer.volumes[0] -= 0.1</key>

    <key char="g">volumes[1] += 0.1</key>
    <key char="f">volumes[1] -= 0.1</key>
    <key char="d">currentBuffer.volumes[1] += 0.1</key>
    <key char="s">currentBuffer.volumes[1] -= 0.1</key>

    <key char="a">
      if (!currentBuffer.filters.length || !currentBuffer.filters.find('distortion')) {
        currentBuffer.filters.push(new FastAtanDistortion(0.1));
      } else {
        var shape = currentBuffer.filters.find('distortion').shape;
        currentBuffer.filters.find('distortion').update(shape + 0.1);
      }
    </key>

    <key char="s">
      if (!currentBuffer.filters.length || !currentBuffer.filters.find('distortion')) {
        currentBuffer.filters.push(new FastAtanDistortion(0.1));
      } else {
        var shape = currentBuffer.filters.find('distortion').shape;
        currentBuffer.filters.find('distortion').update(shape - 0.1);
      }
    </key>

  </code>
</BA>
